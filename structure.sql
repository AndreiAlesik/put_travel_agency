-- Definicja

-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public."Podroz"
(
    "ID" bigint NOT NULL,
    "Nazwa" character varying(255) NOT NULL,
    "Data_rozpoczÄ™cia" timestamp with time zone NOT NULL,
    "Data_ukonczenia" timestamp with time zone NOT NULL,
    "Opis" text,
    "Cena" money NOT NULL,
    PRIMARY KEY ("ID")
);

CREATE TABLE IF NOT EXISTS public."Etap"
(
    "ID" bigint NOT NULL,
    "Punkt_poczatkowy" character varying(255) NOT NULL,
    "Punkt_konczowy" character varying(255) NOT NULL,
    "Koszt" money NOT NULL,
    "Data_poczatkowa" timestamp with time zone NOT NULL,
    "Data_koncowa" timestamp with time zone NOT NULL,
    PRIMARY KEY ("ID")
);

CREATE TABLE IF NOT EXISTS public."Transport"
(
    "ID" bigint NOT NULL,
    "Nazwa" character varying(255) NOT NULL,
    "Liczba_jednostek" bigint NOT NULL,
    "Liczba_miejsc" bigint NOT NULL,
    PRIMARY KEY ("ID")
);

CREATE TABLE IF NOT EXISTS public."Firma_transportowa"
(
    "ID" bigint NOT NULL,
    "Nazwa" character varying(255) NOT NULL,
    "Telefon" character varying(12) NOT NULL,
    "Adres" character varying(255) NOT NULL,
    PRIMARY KEY ("ID")
);

CREATE TABLE IF NOT EXISTS public."Klient"
(
    "Pesel" bigint NOT NULL,
    "Imie" character varying(255) NOT NULL,
    "Nazwisko" character varying(255) NOT NULL,
    "Adres" character varying(255) NOT NULL,
    "Numer_telefonu" character varying(12) NOT NULL,
    "Data_urodzenia" date NOT NULL,
    PRIMARY KEY ("Pesel")
);

CREATE TABLE IF NOT EXISTS public."Zakwaterowanie"
(
    "ID" bigint NOT NULL,
    "Nazwa" character varying(255) NOT NULL,
    "Koszt" money,
    "Ilosc_miejsc" bigint,
    "Standard_zakwaterowania" character varying(255) NOT NULL,
    PRIMARY KEY ("ID")
);

CREATE TABLE IF NOT EXISTS public."Atrakcja"
(
    "ID" bigint NOT NULL,
    "Nazwa" character varying(255) NOT NULL,
    "Sezon" character varying(255)[] NOT NULL,
    "Opis" text,
    "Adres" character varying(255) NOT NULL,
    "Koszt" bigint NOT NULL,
    PRIMARY KEY ("ID")
);

CREATE TABLE IF NOT EXISTS public."Przewodnik"
(
    "ID" bigint NOT NULL,
    "Imie" character varying(255) NOT NULL,
    "Nazwisko" character varying(255) NOT NULL,
    "Adres" character varying(255) NOT NULL,
    "Numer_telefonu" character varying(12) NOT NULL,
    PRIMARY KEY ("ID")
);

CREATE TABLE IF NOT EXISTS public."Jezyk"
(
    "Kod" character varying(5) NOT NULL,
    "Nazwa" character(255) NOT NULL,
    PRIMARY KEY ("Kod")
);

CREATE TABLE IF NOT EXISTS public."Pracownik"
(
    "ID" bigint NOT NULL,
    "Imie" character varying(255) NOT NULL,
    "Nazwisko" character varying(255) NOT NULL,
    "Numer_telefon" character varying(12) NOT NULL,
    "Adres" character varying(255) NOT NULL,
    PRIMARY KEY ("ID")
);

CREATE TABLE IF NOT EXISTS public."Transport_Firma_transportowa"
(
    "Transport_ID" bigint NOT NULL,
    "Firma_transportowa_ID" bigint NOT NULL
);

CREATE TABLE IF NOT EXISTS public."Zakwaterowanie_Podroz"
(
    "Zakwaterowanie_ID" bigint NOT NULL,
    "Podroz_ID" bigint NOT NULL
);

CREATE TABLE IF NOT EXISTS public."Podroz_Atrakcja"
(
    "Podroz_ID" bigint NOT NULL,
    "Atrakcja_ID" bigint NOT NULL
);

CREATE TABLE IF NOT EXISTS public."Atrakcja_Przewodnik"
(
    "Atrakcja_ID" bigint NOT NULL,
    "Przewodnik_ID" bigint NOT NULL
);

CREATE TABLE IF NOT EXISTS public."Przewodnik_Podroz"
(
    "Przewodnik_ID" bigint NOT NULL,
    "Podroz_ID" bigint NOT NULL
);

CREATE TABLE IF NOT EXISTS public."Jezyk_Przewodnik"
(
    "Jezyk_Kod" character varying(5) NOT NULL,
    "Przewodnik_ID" bigint NOT NULL
);

CREATE TABLE IF NOT EXISTS public."Jezyk_Pracownik"
(
    "Jezyk_Kod" character varying(5) NOT NULL,
    "Pracownik_ID" bigint NOT NULL
);

CREATE TABLE IF NOT EXISTS public."Pracownik_Podroz"
(
    "Pracownik_ID" bigint NOT NULL,
    "Podroz_ID" bigint NOT NULL
);

CREATE TABLE IF NOT EXISTS public."Klient_Podroz"
(
    "Klient_Pesel" bigint NOT NULL,
    "Podroz_ID" bigint NOT NULL
);

CREATE TABLE IF NOT EXISTS public."Etap_Podroz"
(
    "Etap_ID" bigint NOT NULL,
    "Podroz_ID" bigint NOT NULL
);

ALTER TABLE IF EXISTS public."Etap"
    ADD FOREIGN KEY ("ID")
    REFERENCES public."Transport" ("ID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Transport_Firma_transportowa"
    ADD FOREIGN KEY ("Transport_ID")
    REFERENCES public."Transport" ("ID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Transport_Firma_transportowa"
    ADD FOREIGN KEY ("Firma_transportowa_ID")
    REFERENCES public."Firma_transportowa" ("ID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Zakwaterowanie_Podroz"
    ADD FOREIGN KEY ("Zakwaterowanie_ID")
    REFERENCES public."Zakwaterowanie" ("ID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Zakwaterowanie_Podroz"
    ADD FOREIGN KEY ("Podroz_ID")
    REFERENCES public."Podroz" ("ID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Podroz_Atrakcja"
    ADD FOREIGN KEY ("Podroz_ID")
    REFERENCES public."Podroz" ("ID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Podroz_Atrakcja"
    ADD FOREIGN KEY ("Atrakcja_ID")
    REFERENCES public."Atrakcja" ("ID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Atrakcja_Przewodnik"
    ADD FOREIGN KEY ("Atrakcja_ID")
    REFERENCES public."Atrakcja" ("ID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Atrakcja_Przewodnik"
    ADD FOREIGN KEY ("Przewodnik_ID")
    REFERENCES public."Przewodnik" ("ID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Przewodnik_Podroz"
    ADD FOREIGN KEY ("Przewodnik_ID")
    REFERENCES public."Przewodnik" ("ID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Przewodnik_Podroz"
    ADD FOREIGN KEY ("Podroz_ID")
    REFERENCES public."Podroz" ("ID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Jezyk_Przewodnik"
    ADD FOREIGN KEY ("Jezyk_Kod")
    REFERENCES public."Jezyk" ("Kod") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Jezyk_Przewodnik"
    ADD FOREIGN KEY ("Przewodnik_ID")
    REFERENCES public."Przewodnik" ("ID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Jezyk_Pracownik"
    ADD FOREIGN KEY ("Jezyk_Kod")
    REFERENCES public."Jezyk" ("Kod") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Jezyk_Pracownik"
    ADD FOREIGN KEY ("Pracownik_ID")
    REFERENCES public."Pracownik" ("ID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Pracownik_Podroz"
    ADD FOREIGN KEY ("Pracownik_ID")
    REFERENCES public."Pracownik" ("ID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Pracownik_Podroz"
    ADD FOREIGN KEY ("Podroz_ID")
    REFERENCES public."Podroz" ("ID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Klient_Podroz"
    ADD FOREIGN KEY ("Klient_Pesel")
    REFERENCES public."Klient" ("Pesel") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Klient_Podroz"
    ADD FOREIGN KEY ("Podroz_ID")
    REFERENCES public."Podroz" ("ID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Etap_Podroz"
    ADD FOREIGN KEY ("Etap_ID")
    REFERENCES public."Etap" ("ID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Etap_Podroz"
    ADD FOREIGN KEY ("Podroz_ID")
    REFERENCES public."Podroz" ("ID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;

CREATE SEQUENCE public.id_etap_sequence
    INCREMENT 1
    START 1;

ALTER SEQUENCE public.id_etap_sequence
    OWNER TO bartek;